@model Learner.Controllers.QuizzerViewModel

@{
    ViewBag.Title = "Quizzer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/knockout-2.1.0.js"></script>
<link href="~/Content/bootstrap-responsive.min.css" rel="stylesheet" />
<pre>
<textarea id="info">
@Html.Raw(@"")
    
</textarea>
</pre>

<button id="go">
    Go!
</button>

<div id="itemDialog" class="modal hide" style="width: 300px; position: absolute">
    <div class="modal-header"></div>
    <div id="itemText" class="modal-body"></div>  
    <div class="modal-footer">
        <a id="google" class="btn">Google!</a>
        <a id="anotherTopic" class="btn">Another Topic</a>
        <a class="btn btn-primary">Ok</a>
    </div>  
</div>



@section scripts
{
    <script type="text/javascript" src="~/Scripts/Data/quizzerData.js"></script>
    <script type="text/javascript">
        //fisherYates(quizTopics);

        $(function () {
            $("#go").click(function() {
                fisherYates(quizTopics);

                var showedFirstList = false;
                $(quizTopics).each(function(index, list) {
                    if (showedFirstList) return;

                    // Split the contents of the text area
                    quizOnArray(stringArray);
                    showedFirstList = true;
                });
            });
        });

        var quizItems = [];

        function quizOnString(stringArray) {
            var listToQuizOn = stringArray.split("\n");

            quiz(listToQuizOn);
        }


        function quiz(stringArray) {
            fisherYates(stringArray);
            quizItems = ko.utils.arrayFilter(stringArray, function(item) {
                return item.length > 0;
            });

            showNext();
        }

        function showNext() {
            if (quizItems.length == 0) {
                alert("Done");

                return;
            }

            var elem = quizItems.slice(0, 1);
            quizItems = quizItems.slice(1, quizItems.length);

            $("#itemText").text(elem);
            $("#itemDialog").modal({ keyboard: true });

            $(".btn-primary").focus();
        }

        function hideCurrentItem() {
            $("#itemDialog").modal('hide');
        }

        function fisherYates(myArray) {
            var i = myArray.length, j, tempi, tempj;
            if (i == 0) return false;
            while (--i) {
                j = Math.floor(Math.random() * (i + 1));
                tempi = myArray[i];
                tempj = myArray[j];
                myArray[i] = tempj;
                myArray[j] = tempi;
            }
        }

        $(".btn-primary").click(function() {
            hideCurrentItem();
            showNext();
        });

        $("#anotherTopic").click(function() {
            hideCurrentItem();
            $("#go").trigger("click");
        });
        
        $("#google").click(function () {
            var searchString = $("#itemText").text();
            window.open("https://www.google.com/?q=" + searchString, '_blank');
        });











        app = angular.module("xyz", function () { });

        function QuizCtrl($scope) {
            //$scope.quizTopics = quizTopics;
            $scope.jsonified = jsonified;

            $scope.openTopic = function (element) {
                $scope.quizOnArray(element.entries);
            }

            $scope.quizOnArray = function (stringArray) {
                quiz(stringArray);
            }

//            var updatedJson = quizTopics.map(function (value, index) { return { name: "", entries: value.split("\n") }; });
  //          console.log(JSON.stringify(updatedJson));
        }






    </script>
    }

<div ng-app="xyz">
    <div ng-controller="QuizCtrl">
        <ul ng-repeat="quizTopic in jsonified">
            <li ng-click="openTopic(quizTopic)">Name: {{quizTopic.name}} [{{quizTopic.substring(0, 40)}}] ({{quizTopic.entries.length}})</li>
        </ul>
@*        <ul ng-repeat="quizTopic in quizTopics">
            <li ng-click="openTopic(quizTopic)">{{quizTopic.substring(0, 30)}}</li>
        </ul>*@


    </div>
</div>